{"ast":null,"code":"import _objectWithoutProperties from\"/Users/admin/cctv/cctv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import Tiles from'./tiles';import'../styles/store.scss';import{connect}from'react-redux';import{addToCart as _addToCart}from'../redux/actions/cartActions';var Store=function Store(_ref){var items=_ref.items,props=_objectWithoutProperties(_ref,[\"items\"]);console.log(props);var RenderTiles=function RenderTiles(){return items.map(function(image,id){return React.createElement(Tiles,{key:id,handleClick:props.addToCart,itemId:id,title:image.title,image:image.imageUrl});});};return React.createElement(\"div\",{className:\"store-wrapper\"},RenderTiles());};var mapStateToProps=function mapStateToProps(state){return{items:state.items};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addToCart:function addToCart(id){dispatch(_addToCart(id));}};};export default connect(mapStateToProps,mapDispatchToProps)(Store);","map":{"version":3,"sources":["/Users/admin/cctv/cctv/src/components/store.js"],"names":["React","Tiles","connect","addToCart","Store","items","props","console","log","RenderTiles","map","image","id","title","imageUrl","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,sBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAS,GAATA,CAAAA,UAAT,KAA0B,8BAA1B,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAZC,KAAY,0CAEnCC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAClB,MAAOJ,CAAAA,KAAK,CAACK,GAAN,CAAU,SAACC,KAAD,CAAQC,EAAR,QAAe,qBAAC,KAAD,EAAO,GAAG,CAAEA,EAAZ,CAAgB,WAAW,CAAEN,KAAK,CAACH,SAAnC,CAA8C,MAAM,CAAES,EAAtD,CAA0D,KAAK,CAAED,KAAK,CAACE,KAAvE,CAA8E,KAAK,CAAEF,KAAK,CAACG,QAA3F,EAAf,EAAV,CAAP,CACP,CAFD,CAIA,MACI,4BAAK,SAAS,CAAC,eAAf,EAEQL,WAAW,EAFnB,CADJ,CAOH,CAdD,CAgBA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAS,CAC7B,MAAO,CACLX,KAAK,CAAEW,KAAK,CAACX,KADR,CAAP,CAGD,CAJH,CAKA,GAAMY,CAAAA,kBAAkB,CAAE,QAApBA,CAAAA,kBAAoB,CAACC,QAAD,CAAY,CAClC,MAAM,CACFf,SAAS,CAAE,mBAACS,EAAD,CAAM,CAACM,QAAQ,CAACf,UAAS,CAACS,EAAD,CAAV,CAAR,CAAwB,CADxC,CAAN,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAACa,eAAD,CAAkBE,kBAAlB,CAAP,CAA6Cb,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Tiles from './tiles';\nimport '../styles/store.scss';\nimport { connect } from 'react-redux';\nimport { addToCart } from '../redux/actions/cartActions';\n\n\nconst Store = ({ items, ...props }) => {\n\n    console.log(props);\n    const RenderTiles = () => {\n            return items.map((image, id) => <Tiles key={id} handleClick={props.addToCart} itemId={id} title={image.title} image={image.imageUrl} />) \n    }\n\n    return (\n        <div className=\"store-wrapper\">\n            {\n                RenderTiles()\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n      items: state.items\n    }\n  }\nconst mapDispatchToProps= (dispatch)=>{\n    return{\n        addToCart: (id)=>{dispatch(addToCart(id))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);"]},"metadata":{},"sourceType":"module"}